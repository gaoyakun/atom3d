<?xml version="1.0" encoding="utf-8"?>
<material auto="1">
  <include filename="/materials/builtin/forward/forwardrendering.inc" />
  
  <param name="numDetails" type="int"/>
  <param name="drawDetail" type="int"/>
  <param name="mvp" type="float4x4" default="$MVP_Matrix"/>
  <param name="modelViewMatrix" type="float4x4" default="$WorldView_Matrix"/>
  <param name="offsetScale" type="float4"/>
  <param name="uvScale" type="float4"/>
  <param name="normalMap" type="texture"/>
  <param name="normalSampler" type="sampler2D">
    <texture value="$normalMap"/>
    <filter value="llp"/>
    <addressu value="clamp"/>
    <addressv value="clamp"/>
  </param>
  <param name="baseMap" type="texture"/>
  <param name="baseSampler" type="sampler2D">
    <texture value="$baseMap"/>
    <filter value="llp"/>
    <addressu value="clamp"/>
    <addressv value="clamp"/>
    <srgb value="true"/>
  </param>
  <code>
    <![CDATA[
      struct TerrainVSOutput
      {
        float4 position : POSITION;
        float2 tex0 	: TEXCOORD0;
		float4 fog 		: TEXCOORD1;
      };
      
      TerrainVSOutput TerrainVSNonDetail(float4 pos: POSITION, float tex: TEXCOORD0)
      {
        TerrainVSOutput output;
        float4 posObj;
        posObj.xz = pos.xz * offsetScale.xz +offsetScale.yw;
        posObj.y = tex;
        posObj.w = 1.0;
        output.position = mul(posObj, mvp);
        output.tex0 	= posObj.xz * uvScale;
		output.fog		= CalcFog(output.position.w);
		
        return output;
      }
      
      float4 TerrainPSNonDetail(in TerrainVSOutput IN) : COLOR0
      {
        float4 color = tex2D(baseSampler, IN.tex0);
        float3 normal = mul(2*tex2D(normalSampler, IN.tex0).xyz-1.0, (float3x3)modelViewMatrix);
		
		float4 lighting = AmbientLighting();
		lighting += DiffuseLighting(normalize(normal),1);
		color *= lighting;
		color.a = 1;
		
		ApplyFog( color, IN.fog );
		
        return color;  
      }

    ]]>
  </code>
  <effect name="nondetail" scheme="custom" schemelayer="Solid">
    <requirements>
      <eq param="drawDetail" value="0"/>
    </requirements>
    <pass>
      <streamdefine>
        <stream semantec="position"/>
        <stream semantec="texcoord0" type="float"/>
      </streamdefine>
      <stencil_state>
        <enable value="true"/>
        <readmask value="128"/>
        <writemask value="128"/>
        <ref value="128"/>
        <func_front value="always"/>
        <failop_front value="keep"/>
        <zfailop_front value="keep"/>
        <passop_front value="replace"/>
      </stencil_state>
      <depth_state>
        <zfunc value="lessequal"/>
        <zwrite value="true"/>
      </depth_state>
      <vertexshader entry="TerrainVSNonDetail" target="vs_2_0"/>
      <pixelshader entry="TerrainPSNonDetail" target="ps_2_0"/>
    </pass>
  </effect>
  
</material>
