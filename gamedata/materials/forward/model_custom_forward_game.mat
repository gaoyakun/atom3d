<?xml version="1.0" ?>
<material auto="1">
    <include filename="/materials/builtin/forward/forwardrendering.inc" />
    <include filename="/materials/builtin/skinning.inc" />
	<include filename="/materials/builtin/model_default_params.inc" />
	<include filename="/materials/builtin/model_bumpmap_defines.inc" />
	<include filename="/materials/model_params_game.inc" />
	
	<param name="SSSBRDFTexture" type="texture" default="/textures/sss/brdf_sss.png" editortype="none"/>
	<param name="SSSBRDFSampler" type="sampler2D" >
		<filter value="lln"/>
		<addressu value="border"/>
		<addressv value="border"/>
		<bordercolor value="1,1,1,1"/>
		<texture value="$SSSBRDFTexture"/>
		<srgb value="false" />
	</param>
	<param name="sssss" type="int" default="0" editortype="bool" />
	<param name="depthThreshold" type="float" default="1" editortype="none" />
	<param name="scatterRadius" type="float" default="2" editortype="none" />
	<param name="rimStrength" type="float" default="0.0" editortype="none" />
	<param name="rimPower" type="float" default="3" editortype="none" />
	<param name="rimColor" type="float4" default="1.0,1.0,1.0,1.0" editortype="color" />
	<param name="sssLayerColor0" type="float4" default="0.233,0.455,0.649,1.0" editortype="color" />
	<param name="sssLayerColor1" type="float4" default="0.218,0.545,0.351,1.0" editortype="color" />
	<param name="sssLayerColor2" type="float4" default="0.358,0.000,0.0,1.0" editortype="color" />
	<param name="sssLayerColor3" type="float4" default="0.191,0.0,0.0,1.0" editortype="color" />
	<param name="skinMaskTexture" type="texture" default="/textures/default/white.dds" editortype="none" />
	<param name="skinMaskSampler" type="sampler2D">
        <texture value="$skinMaskTexture" />
        <filter value="ppn" />
		<lodbias value="0" />
        <addressu value="wrap" />
        <addressv value="wrap" />
        <srgb value="false" />
    </param>
	
    <!--
	<param name="hasVertexColor" type="int" default="0" editortype="bool" />
    <param name="hasDiffuseTexture" type="int" default="0" editortype="bool" />
    <param name="enableAlphaBlend" type="int" default="0" editortype="bool" />
    <param name="enableAlphaTest" type="int" defualt="0" editortype="bool" />
    <param name="enablePostZPass" type="int" default="0" editortype="bool" />
    <param name="projectable" type="int" default="0" editortype="bool" />
    <param name="enableSkinning" type="int" />
    <param name="alpharef" type="float" editortype="none" />
    <param name="transparency" type="float4" default="1,1,1,1" editortype="none" />
    <param name="Kd" type="float" default="1" editortype="none" />
    <param name="Ks" type="float" default="1" editortype="none" />
    <param name="halfLambertScale" type="float" default="1.0" editortype="none" />
    <param name="cullmode" type="int" default="1" editortype="e_cullmode" />
    <param name="srcBlend" type="int" default="5" editortype="e_blendfunc" />
    <param name="destBlend" type="int" default="6" editortype="e_blendfunc" />
    <param name="filter" type="int" default="13" editortype="e_samplerfilter" />
    <param name="miplod" type="float" default="0" editortype="none" />
    <param name="diffuseTexture" type="texture" editortype="none" />
    <param name="diffuseSampler" type="sampler2D">
        <texture value="$diffuseTexture" />
        <filter value="$filter" />
		<lodbias value="$miplod" />
        <addressu value="wrap" />
        <addressv value="wrap" />
        <srgb value="true" />
    </param>
    <param name="diffuseColor" type="float4" default="1.0,1.0,1.0,1.0" editortype="color" />
    <param name="MVP" type="float4x4" default="$MVP_Matrix" />
    <param name="worldview" type="float4x4" default="$WorldView_Matrix" />
    <param name="shininess" type="float" default="64" editortype="none" />
    <param name="glossness" type="float" default="0" editortype="none" />
	<param name="colorMultiplier" type="float" default="1" editortype="none" />
	<param name="lightDirVS" type="float3" default="0,0,-1"/>
	<param name="lightColor" type="float4" default="1,1,1,1.5"/>
	-->
	
    <code>
        <![CDATA[
		
		struct a2v_nodiffuse
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
			float2 tex0: TEXCOORD0;
		};
		
		struct a2v_diffuse
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
      		float4 diffuse: COLOR0;
			float2 tex0: TEXCOORD0;
		};
		
		struct a2v_nodiffuse_notex
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
		};
		
		struct a2v_diffuse_notex
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
			float4 diffuse: COLOR0;
		};
		
		struct a2v_nodiffuse_skinning
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
			float2 tex0: TEXCOORD0;
			float4 blendweights: TEXCOORD1;
			float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_diffuse_skinning
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
			float4 diffuse: COLOR0;
			float2 tex0: TEXCOORD0;
			float4 blendweights: TEXCOORD1;
			float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_nodiffuse_notex_skinning
		{
			float4 position: POSITION;
			float3 normal: NORMAL;
			float4 blendweights: TEXCOORD1;
			float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_diffuse_notex_skinning
		{
			float4 position: POSITION;
			float3 normal: NORMAL;		
			float4 diffuse: COLOR0;
			float4 blendweights: TEXCOORD1;
			float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_blend_nodiffuse
		{
		  float4 position: POSITION;
		  float2 tex0: TEXCOORD0;
		};
		
		struct a2v_blend_diffuse
		{
		  float4 position: POSITION;
		  float4 diffuse: COLOR0;
		  float2 tex0: TEXCOORD0;
		};
		
		struct a2v_blend_nodiffuse_notex
		{
		  float4 position: POSITION;
		};
		
		struct a2v_blend_diffuse_notex
		{
		  float4 position: POSITION;
		  float4 diffuse: COLOR0;
		};
		
		struct a2v_blend_nodiffuse_skinning
		{
		  float4 position: POSITION;
		  float2 tex0: TEXCOORD0;
		  float4 blendweights: TEXCOORD1;
		  float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_blend_diffuse_skinning
		{
		  float4 position: POSITION;
		  float4 diffuse: COLOR0;
		  float2 tex0: TEXCOORD0;
		  float4 blendweights: TEXCOORD1;
		  float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_blend_nodiffuse_notex_skinning
		{
		  float4 position: POSITION;
		  float4 blendweights: TEXCOORD1;
		  float4 blendindices: TEXCOORD2;
		};
		
		struct a2v_blend_diffuse_notex_skinning
		{
		  float4 position: POSITION;
		  float4 diffuse: COLOR0;
		  float4 blendweights: TEXCOORD1;
		  float4 blendindices: TEXCOORD2;
		};
		
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		struct v2p
		{
			float4 position	: POSITION;
			float4 diffuse	: COLOR0;
			float2 tex0		: TEXCOORD0;
			float3 viewpos	: TEXCOORD1;
			float3 normal	: TEXCOORD2;
			float4 fog 		: TEXCOORD3;
		};
		
		struct v2p_notex
		{
			float4 position	: POSITION;
			float4 diffuse	: COLOR0;
			float3 viewpos	: TEXCOORD0;
			float3 normal	: TEXCOORD1;
			float4 fog 		: TEXCOORD2;
		};
		
		struct v2p_blend
		{
		  float4 position	: POSITION;
		  float4 diffuse	: COLOR0;
		  float2 tex0		: TEXCOORD0;
		  float4 fog 		: TEXCOORD1;
		};
    
		struct v2p_blend_notex
		{
		  float4 position	: POSITION;
		  float4 diffuse	: COLOR0;
		  float4 fog 		: TEXCOORD0;
		};
		
		struct v2p_bodyEffect
		{
			float4 position	: POSITION;
			float4 texcoord : TEXCOORD0;
			float3 viewpos	: TEXCOORD1;
			float3 normal	: TEXCOORD2;
		};
		
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    
		void vs_nodiffuse (in a2v_nodiffuse IN, out v2p OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor;
			OUT.tex0 				= IN.tex0;
			OUT.normal 				= mul(IN.normal, (float3x3)worldview);
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_diffuse (in a2v_diffuse IN, out v2p OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.tex0 				= IN.tex0;
			OUT.normal 				= mul(IN.normal, (float3x3)worldview);
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_nodiffuse_notex (in a2v_nodiffuse_notex IN, out v2p_notex OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor;
			OUT.normal 				= mul(IN.normal, (float3x3)worldview);
			OUT.fog					= CalcFog(OUT.position.w);
		}

		void vs_diffuse_notex (in a2v_diffuse_notex IN, out v2p_notex OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.normal 				= mul(IN.normal, (float3x3)worldview);
			OUT.fog					= CalcFog(OUT.position.w);
		}
		

		void vs_nodiffuse_skinning (in a2v_nodiffuse_skinning IN, out v2p OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			float3 skinnedNormal 	= SkinningVectorTransform (IN.normal, IN.blendindices, IN.blendweights);
			OUT.normal 				= mul(skinnedNormal, (float3x3)worldview);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_diffuse_skinning (in a2v_diffuse_skinning IN, out v2p OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			float3 skinnedNormal 	= SkinningVectorTransform (IN.normal, IN.blendindices, IN.blendweights);
			OUT.normal 				= mul(skinnedNormal, (float3x3)worldview);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		
		void vs_nodiffuse_notex_skinning (in a2v_nodiffuse_notex_skinning IN, out v2p_notex OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			float3 skinnedNormal 	= SkinningVectorTransform (IN.normal, IN.blendindices, IN.blendweights);
			OUT.normal 				= mul(skinnedNormal, (float3x3)worldview);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_diffuse_notex_skinning (in a2v_diffuse_notex_skinning IN, out v2p_notex OUT)
		{
      		float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			float3 skinnedNormal 	= SkinningVectorTransform (IN.normal, IN.blendindices, IN.blendweights);
			OUT.normal 				= mul(skinnedNormal, (float3x3)worldview);
			OUT.viewpos 			= mul(IN.position, worldview);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_nodiffuse (in a2v_blend_nodiffuse IN, out v2p_blend OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.diffuse 			= diffuseColor;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_diffuse (in a2v_blend_diffuse IN, out v2p_blend OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_nodiffuse_notex (in a2v_blend_nodiffuse_notex IN, out v2p_blend_notex OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.diffuse 			= diffuseColor;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_diffuse_notex (in a2v_blend_diffuse_notex IN, out v2p_blend_notex OUT)
		{
			OUT.position 			= mul(IN.position, MVP);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_nodiffuse_skinning (in a2v_blend_nodiffuse_skinning IN, out v2p_blend OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			OUT.diffuse 			= diffuseColor;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_diffuse_skinning (in a2v_blend_diffuse_skinning IN, out v2p_blend OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.tex0 				= IN.tex0;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_nodiffuse_notex_skinning (in a2v_blend_nodiffuse_notex_skinning IN, out v2p_blend_notex OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			OUT.diffuse 			= diffuseColor;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		void vs_blend_diffuse_notex_skinning (in a2v_blend_diffuse_notex_skinning IN, out v2p_blend_notex OUT)
		{
			float3 skinnedVertex 	= SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			OUT.position 			= mul(float4(skinnedVertex, 1.0), MVP);
			OUT.diffuse 			= diffuseColor * IN.diffuse;
			OUT.fog					= CalcFog(OUT.position.w);
		}
		
		//////////////////////////////////// body effect ////////////////////////////////////////////////////
			
		void vs_bodyEffect (in a2v_nodiffuse IN, out v2p_bodyEffect OUT)
		{
			float4 position = IN.position;
				
		#if 1
			float3 normal = normalize(IN.normal);
			position.xyz += normal * bodyEffectParams.w;
		#endif
			
			OUT.position = mul( position, MVP);
			OUT.viewpos = mul( position, worldview);
			OUT.normal = mul( IN.normal, (float3x3)worldview );

			OUT.texcoord.xy = IN.tex0.xy;
			
			// bodyEffectParams.x is the angle
			float2 moveDir;
			sincos( bodyEffectParams.x, moveDir.x, moveDir.y );
			
			// bodyEffectParams.y is the speed / bodyEffectParams.z is the tiling factor
			float2 tc = ( IN.position.zy );
			OUT.texcoord.zw = ( tc + bodyEffectTime * moveDir * bodyEffectParams.y ) * bodyEffectParams.z ;//IN.tex0;
		}
		
		void vs_bodyEffect_skinning (in a2v_nodiffuse_skinning IN, out v2p_bodyEffect OUT)
		{
			float3 skinnedVertex = SkinningPositionTransform (IN.position, IN.blendindices, IN.blendweights);
			float3 skinnedNormal = SkinningVectorTransform (IN.normal, IN.blendindices, IN.blendweights);
			
		#if 1
			skinnedNormal = normalize(skinnedNormal);
			skinnedVertex += skinnedNormal * bodyEffectParams.w;
		#endif
		
			OUT.position = mul(float4(skinnedVertex, 1.0), MVP);
			OUT.normal = mul(skinnedNormal, (float3x3)worldview);
			
			OUT.viewpos = mul(float4(skinnedVertex, 1.0), worldview);
			
			OUT.texcoord.xy = IN.tex0;
			
			// bodyEffectParams.x is the angle
			float2 moveDir;
			sincos( bodyEffectParams.x, moveDir.x, moveDir.y );
			
			// bodyEffectParams.y is the speed / bodyEffectParams.z is the tiling factor
			float2 tc = ( IN.position.zy );
			OUT.texcoord.zw = ( tc + bodyEffectTime * moveDir * bodyEffectParams.y ) * bodyEffectParams.z ;//IN.tex0;
		}
		
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		/////////////////////////////////////////// PS /////////////////////////////////////////////////
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		float4 ps (	in v2p IN ) : COLOR
		{
			float4 diffuseColor = tex2D(diffuseSampler, IN.tex0) * IN.diffuse;

			float4 lightvalue = ForwardLighting( IN.normal,IN.viewpos,halfLambertScale,shininess );
			
			float4 color = float4( diffuseColor.rgb * lightvalue.rgb + glossness * lightvalue.a, 1.0f );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}				

		float4 ps_notex (	in v2p_notex IN ) : COLOR
		{
			float4 diffuseColor = IN.diffuse;

			float4 lightvalue = ForwardLighting( IN.normal,IN.viewpos,halfLambertScale,shininess );
						
			float4 color = float4( diffuseColor.rgb * lightvalue.rgb + glossness * lightvalue.a, 1.0f );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}

		float4 ps_alphatest ( in v2p IN ) : COLOR
		{
			float4 diffuseColor = tex2D(diffuseSampler, IN.tex0) * IN.diffuse;
			
			clip (diffuseColor.a - alpharef);
			
			float4 lightvalue = ForwardLighting( IN.normal,IN.viewpos, halfLambertScale, shininess );
		  
			float4 color = float4( diffuseColor.rgb * lightvalue.rgb + glossness * lightvalue.a, 1.0f );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}				
    
		float4 ps_notex_alphatest ( in v2p_notex IN ) : COLOR
		{
			float4 diffuseColor = IN.diffuse;
			
			clip (IN.diffuse.a - alpharef);
			
			float4 lightvalue = ForwardLighting( IN.normal,IN.viewpos,halfLambertScale,shininess );
		  
			float4 color = float4( diffuseColor.rgb * lightvalue.rgb + glossness * lightvalue.a, 1.0f );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}
		
		float4 ps_blend (in v2p_blend IN) : COLOR
		{
			float4 color = tex2D(diffuseSampler, IN.tex0) * IN.diffuse * transparency * float4( colorMultiplier, colorMultiplier, colorMultiplier, 1 );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}				
    
		float4 ps_blend_notex (in v2p_blend_notex IN) : COLOR
		{
			float4 color = IN.diffuse * transparency * float4( colorMultiplier, colorMultiplier, colorMultiplier, 1 );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}				
    
		float4 ps_blend_alphatest (in v2p_blend IN) : COLOR
		{
			float4 color = tex2D(diffuseSampler, IN.tex0) * IN.diffuse;
			clip (color.a - alpharef);
			color = color * transparency * float4( colorMultiplier, colorMultiplier, colorMultiplier, 1 );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}				
    
		float4 ps_blend_notex_alphatest (in v2p_blend_notex IN) : COLOR
		{
			clip (IN.diffuse.a - alpharef);
			float4 color = IN.diffuse * transparency * float4( colorMultiplier, colorMultiplier, colorMultiplier, 1 );
			
			ApplyFog( color, IN.fog );
			
			return color;
		}
		
		////////////////////////////////////////////////////////////////////////////////////////////
		// wangjian added for test game body effect
		half GetFresnel(half NdotI, half bias, half power)
		{
			half facing = (1.0 - NdotI);
			return saturate( bias + (1-bias) * pow(facing, power) );
		}	
		
		float4 ps_bodyEffect (in v2p_bodyEffect IN) : COLOR0
		{
			float4 customColor = tex2D(bodyEffectSampler, IN.texcoord.zw);
			customColor.xyz *= bodyEffectColor.xyz * bodyEffectColor.w * 255.0;
			
			// edge hilight
		#if 1
			float3 normalVS = 	IN.normal;
			normalVS 		*= 	0.5 - sign(normalVS.z);
			half fNdotE 	= 	saturate( dot( normalize( -IN.viewpos.xyz ), normalize( normalVS.xyz ) ) );
			half fresnel 	=  	GetFresnel( fNdotE, 0, edgeHilightParams.x );
			half rim 		= 	smoothstep( edgeHilightParams.y, edgeHilightParams.z, fresnel );
		#endif
			
			customColor.xyz = lerp( customColor.xyz, edgeHilightColor.xyz * edgeHilightParams.w, rim );
			return float4( customColor.xyz, rim );
		}	
		
		// wangjian added for test game body effect
		float4 ps_alphatest_bodyEffect (in v2p_bodyEffect IN) : COLOR0
		{
			float4 color = tex2D(diffuseSampler, IN.texcoord.xy);
			clip (color.a - alpharef);
			
			float4 customColor = tex2D(bodyEffectSampler, IN.texcoord.zw);
			customColor.xyz *= bodyEffectColor.xyz * bodyEffectColor.w * 255.0;
			
			// rim lighting
		#if 1
			float3 normalVS = 	IN.normal;
			normalVS 		*= 	0.5 - sign(normalVS.z);
			half fNdotE 	= 	saturate( dot( normalize( -IN.viewpos.xyz ), normalize( normalVS.xyz ) ) );
			half fresnel 	=  	GetFresnel( fNdotE, 0, edgeHilightParams.x );
			half rim 		= 	smoothstep( edgeHilightParams.y, edgeHilightParams.z, fresnel );
		#endif
			
			customColor.xyz = lerp( customColor.xyz, edgeHilightColor.xyz * edgeHilightParams.w, rim );
			
			return float4( customColor.xyz, rim );
		}
    
    ]]>
	</code>
    
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_noTexture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_noTexture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_noTexture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
	    <eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
	
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_noTexture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_noTexture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_noTexture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_noTexture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_noTexture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_Texture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_Texture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_Texture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_Diffuse_Texture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_noTexture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_noTexture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_noTexture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_noTexture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_noTexture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_noTexture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_noTexture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_noTexture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_Texture" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_Texture_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
	    <ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_Texture_skinning" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
	    <eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_AlphaTest_Diffuse_Texture_skinning_Projectable" scheme="custom" schemelayer="Solid">
        <requirements>
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
	    <ne param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>	
	    <stencil_state>
                <enable value="true"/>
		<twosided value="true"/>
                <readmask value="128"/>
                <writemask value="128"/>
                <ref value="128"/>
                <func_front value="always"/>
                <failop_front value="keep"/>
                <zfailop_front value="keep"/>
                <passop_front value="replace"/>
                <func_back value="always"/>
                <failop_back value="keep"/>
                <zfailop_back value="keep"/>
                <passop_back value="replace"/>
            </stencil_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_noDiffuse_noTexture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_noDiffuse_noTexture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_noDiffuse_Texture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps_blend" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_noDiffuse_Texture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_Diffuse_noTexture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_Diffuse_noTexture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_Diffuse_Texture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse" target="vs_2_0" />
            <pixelshader entry="ps_blend" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_noAlphaTest_Diffuse_Texture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_noDiffuse_noTexture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_noDiffuse_noTexture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_noDiffuse_Texture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse" target="vs_2_0" />
            <pixelshader entry="ps_blend_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_noDiffuse_Texture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_nodiffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_Diffuse_noTexture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_notex" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_Diffuse_noTexture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <eq param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_notex_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_notex_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_Diffuse_Texture" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse" target="vs_2_0" />
            <pixelshader entry="ps_blend_alphatest" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="AlphaBlend_AlphaTest_Diffuse_Texture_skinning" scheme="custom" schemelayer="Transparent">
        <requirements>
            <ne param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <ne param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="color0" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <alphablend_state>
                <enable value="true" />
                <srcblend value="$srcBlend" />
                <destblend value="$destBlend" />
            </alphablend_state>
            <depth_state>
                <zfunc value="lessequal" />
                <zwrite value="false" />
            </depth_state>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
            <vertexshader entry="vs_blend_diffuse_skinning" target="vs_2_0" />
            <pixelshader entry="ps_blend_alphatest" target="ps_2_0" />
        </pass>
    </effect>
	
	<!-- game specific body effect -->
	
	<effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture_bodyEffect" scheme="custom" schemelayer="PostSolid">
        <requirements>
			<ne param="enablebodyEffect" value="0" />
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />	
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
			<depth_state>
                <zfunc value="lessequal" />
                <zwrite value="true" />
            </depth_state>
			<alphablend_state>
                <enable value="true" />
                <srcblend value="srcalpha" />
                <destblend value="invsrcalpha" />
            </alphablend_state>
            <vertexshader entry="vs_bodyEffect" target="vs_2_0" />
            <pixelshader entry="ps_bodyEffect" target="ps_2_0" />
        </pass>
    </effect>
    <effect name="noAlphaBlend_noAlphaTest_noDiffuse_Texture_skinning_bodyEffect" scheme="custom" schemelayer="PostSolid">
        <requirements>
			<ne param="enablebodyEffect" value="0" />
            <eq param="enableAlphaBlend" value="0" />
            <eq param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
                <stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
			<depth_state>
                <zfunc value="lessequal" />
                <zwrite value="true" />
            </depth_state>
			<alphablend_state>
                <enable value="true" />
                <srcblend value="srcalpha" />
                <destblend value="invsrcalpha" />
            </alphablend_state>
            <vertexshader entry="vs_bodyEffect_skinning" target="vs_2_0" />
            <pixelshader entry="ps_bodyEffect" target="ps_2_0" />
        </pass>
    </effect>
	<effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture_bodyEffect" scheme="custom" schemelayer="PostSolid">
        <requirements>
			<ne param="enablebodyEffect" value="0" />
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <eq param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
				<stream semantec="normal" />
				<stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
			<depth_state>
                <zfunc value="lessequal" />
                <zwrite value="true" />
            </depth_state>
			<alphablend_state>
                <enable value="true" />
                <srcblend value="srcalpha" />
                <destblend value="invsrcalpha" />
            </alphablend_state>
            <vertexshader entry="vs_bodyEffect" target="vs_2_0" />
            <pixelshader entry="ps_alphatest_bodyEffect" target="ps_2_0" />
        </pass>
    </effect>
	<effect name="noAlphaBlend_AlphaTest_noDiffuse_Texture_skinning_bodyEffect" scheme="custom" schemelayer="PostSolid">
        <requirements>
			<ne param="enablebodyEffect" value="0" />
            <eq param="enableAlphaBlend" value="0" />
            <ne param="enableAlphaTest" value="0" />
            <eq param="hasVertexColor" value="0" />
            <ne param="hasDiffuseTexture" value="0" />
            <ne param="enableSkinning" value="0" />
			<eq param="projectable" value="0" />
        </requirements>
        <pass>
            <streamdefine>
                <stream semantec="position" />
                <stream semantec="normal" />
				<stream semantec="texcoord0" type="float2" />
            </streamdefine>
            <rasterizer_state>
                <cullmode value="$cullmode" />
            </rasterizer_state>
			<depth_state>
                <zfunc value="lessequal" />
                <zwrite value="true" />
            </depth_state>
			<alphablend_state>
                <enable value="true" />
                <srcblend value="srcalpha" />
                <destblend value="invsrcalpha" />
            </alphablend_state>
            <vertexshader entry="vs_bodyEffect_skinning" target="vs_2_0" />
            <pixelshader entry="ps_alphatest_bodyEffect" target="ps_2_0" />
        </pass>
    </effect>
</material>
