[% FILTER null;
#==============================================================================
# TemplateToolkit2 template for MSVC8 project (vcproj) file.
# Copyright (C) 2004 by Eric Sunshine <sunshine@sunshineco.com>
# Modified by Seth Yastrov <syastrov@users.sourceforge.net>
#
#    This library is free software; you can redistribute it and/or modify it
#    under the terms of the GNU Library General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or (at your
#    option) any later version.
#
#    This library is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
#    License for more details.
#
#    You should have received a copy of the GNU Library General Public License
#    along with this library; if not, write to the Free Software Foundation,
#    Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#==============================================================================
  PROCESS macros.tlib;
  PROCESS control.tlib;
  PROCESS projectx8.tlib;

  MACRO composedefs(defs) GET compose('defines', defs, ';');
  MACRO composedirs(key, seed) GET composepaths(key, seed, ';');

  my = {};
  load(respfile, 'doc');
  FOREACH f IN my.doc.customize; PROCESS $f | null; END;

  files = filter(my.doc.file).split('\|').sort;
END -%]
<?xml version="1.0" encoding="Windows-1252"?>
<VisualStudioProject
	ProjectType="Visual C++"
	Version="8.00"
	Name="[% my.doc.project.0 %]"
	ProjectGUID="{[% guid(my.doc.project.0) %]}"
	>
	<Platforms>
		<Platform
			Name="Win32"
		/>
	</Platforms>
	<ToolFiles>
	</ToolFiles>
	<Configurations>
[% FOREACH build IN builds -%]
		<Configuration
			Name="[% build.name %]|Win32"
			OutputDirectory="[% workbuild([]) %]"
			IntermediateDirectory="[% workbuild([]) %]"
[% interpolate('global') -%]
			UseOfMFC="0"
			ATLMinimizesCRunTimeLibraryUsage="FALSE"
			>
			<Tool
				Name="VCCLCompilerTool"
[% interpolate('compiler') -%]
				PreprocessorDefinitions="
[%- composedefs(['WIN32']) %]"
				OptimizeForProcessor="1"
				AdditionalOptions="[% flags(compose('cflags', [], ' ')) | html %]"
				AdditionalIncludeDirectories="[% composedirs('include', ['.']) %]"
				PrecompiledHeaderFile="[% workbuild([my.doc.project.0,'.pch']) %]"
				AssemblerListingLocation="[% workbuild([]) %]"
				ObjectFile="[% workbuild([]) %]"
				ProgramDataBaseFileName="[% workbuild([my.doc.project.0,'.pdb']) %]"
				WarningLevel="3"
				SuppressStartupBanner="TRUE"
				Detect64BitPortabilityProblems=""
				CompileAs="0"
				/>
			<Tool
				Name="VCCustomBuildTool"
				/>
			<Tool
				Name="VCLinkerTool"
[% interpolate('linker') -%]
				AdditionalOptions="[% flags(compose('lflags', [], ' ')) | html %]"
				AdditionalDependencies="[% compose('libs', [], ' ') %]"
				IgnoreImportLibrary="TRUE"
				SuppressStartupBanner="TRUE"
				AdditionalLibraryDirectories="[% composedirs('libdir', []) %]"
				IgnoreDefaultLibraryNames="LIBC,LIBCD,LIBCMT,LIBCMTD"
				ProgramDatabaseFile="[% workbuild([my.doc.project.0,'.pdb']) %]"
				GenerateManifest="false"
				TargetMachine="1"
				/>
			<Tool
				Name="VCLibrarianTool"
[% interpolate('librarian') -%]
				SuppressStartupBanner="TRUE"
				/>
			<Tool
				Name="VCMIDLTool"
				PreprocessorDefinitions="[% composedefs([]) %]"
				MkTypLibCompatible="TRUE"
				SuppressStartupBanner="TRUE"
				TargetEnvironment="1"
				TypeLibraryName="[% workbuild([my.doc.project.0,'.tlb']) %]"
				/>
			<Tool
				Name="VCPostBuildEventTool"
[% interpolate('postbuild') -%]
				/>
			<Tool
				Name="VCPreBuildEventTool"
				/>
			<Tool
				Name="VCPreLinkEventTool"
				/>
			<Tool
				Name="VCResourceCompilerTool"
				PreprocessorDefinitions="[% composedefs([]) %]"
				AdditionalIncludeDirectories="[% composedirs('include', ['.']) %]"
				Culture="1033"
				/>
			<Tool
				Name="VCWebServiceProxyGeneratorTool"
				/>
			<Tool
				Name="VCWebDeploymentTool"
			/>
		</Configuration>
[% END -%]
	</Configurations>
	<Files>
		[%- FOREACH group IN groups %]
		[%- items = files.grep(group.types) %]
		[%- IF items.size > 0 %]
		<Filter
			Name="[% group.name %]"
			Filter=""
			>
			[%- FOREACH file IN items %]
			<File
				RelativePath="[% path([my.doc.sourceroot.0, file]) %]"
				>
			</File>
			[%- END %]
		</Filter>
		[%- END %]
		[%- END %]
	</Files>
	<Globals>
	</Globals>
</VisualStudioProject>
